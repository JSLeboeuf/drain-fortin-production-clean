name: Supabase Deployment

on:
  push:
    branches: [main]
  release:
    types: [published]
  workflow_dispatch:

env:
  SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
  SUPABASE_PROJECT_ID: ${{ secrets.SUPABASE_PROJECT_ID }}
  NODE_VERSION: '20'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: Install dependencies
        run: |
          cd frontend
          npm ci
          
      - name: Run tests
        run: |
          cd frontend
          npm run test:run
          
      - name: Build frontend
        run: |
          cd frontend
          npm run build

  deploy-functions:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'release' || github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest
          
      - name: Deploy Edge Functions
        run: |
          supabase link --project-ref ${{ secrets.SUPABASE_PROJECT_ID }}
          supabase functions deploy vapi-webhook --no-verify-jwt
          supabase functions deploy send-sms-production --no-verify-jwt
          supabase functions deploy health --no-verify-jwt
          
      - name: Run migrations
        run: |
          supabase db push

  deploy-frontend:
    needs: [test, deploy-functions]
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: Install dependencies
        run: |
          cd frontend
          npm ci
          
      - name: Build production
        env:
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
          VITE_API_BASE_URL: ${{ secrets.VITE_API_BASE_URL }}
        run: |
          cd frontend
          npm run build
          
      - name: Deploy to Supabase Storage
        run: |
          supabase link --project-ref ${{ secrets.SUPABASE_PROJECT_ID }}
          # Upload static files to Supabase Storage
          supabase storage upload-dir frontend/dist public --upsert
          
  health-check:
    needs: [deploy-frontend]
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    
    steps:
      - name: Check deployment health
        run: |
          # Check Edge Functions
          curl -f https://${{ secrets.SUPABASE_PROJECT_ID }}.supabase.co/functions/v1/health
          
          # Check Frontend
          curl -f https://${{ secrets.SUPABASE_PROJECT_ID }}.supabase.co/
          
      - name: Notify success
        if: success()
        run: |
          echo "✅ Deployment successful to Supabase!"
          
      - name: Notify failure
        if: failure()
        run: |
          echo "❌ Deployment failed!"
          exit 1